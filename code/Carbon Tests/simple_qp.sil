method max(a: IArray) returns (at: Int)
{
    inhale forall j:Int :: 0 <= j && j <= len(a) ==> acc(loc(a,j).val)
    exhale forall j:Int :: 0 <= j && j <= len(a) ==> acc(loc(a,j).val)
}

field val: Int

domain IArray {
  function loc(a: IArray, i: Int): Ref
  function len(a: IArray): Int
  function first(r: Ref): IArray
  function second(r: Ref): Int

  axiom all_diff {
    forall a: IArray, i: Int :: {loc(a, i)}
      first(loc(a, i)) == a && second(loc(a, i)) == i
  }

  axiom length_nonneg {
    forall a: IArray :: len(a) >= 0
  }
}