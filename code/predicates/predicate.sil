
field f:Int;

predicate P(x:Ref, y:Int) {
    y >= 0 ==> acc(x.f)
}

method m(a:Ref) 
    requires (acc(P(a,0))
	ensures acc(P(a,0))
{
    unfold P(a, 0)
    var v1:Int := a.f
    
    fold P(a, 0)
    exhale acc(P(a, 0))
}





