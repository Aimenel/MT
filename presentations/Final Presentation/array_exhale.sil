method m3(a: IArray, n: Int, i1: Int, i2:Int)
  requires n > 3
  requires forall i: Int :: i in [0..n) ==> acc(p(a, i+1))
   //:: UnexpectedOutput(postcondition.violated:insufficient.permission, /Carbon/issue/1/)
   //:: UnexpectedOutput(postcondition.violated:insufficient.permission, /Silicon/issue/1/)
  ensures  acc(p(a, 1))
{}

method m4(a: IArray, n: Int, i1: Int, i2:Int)
  requires n > 3
  requires forall i: Int :: i in [0..n) ==> acc(loc(a, i+1).val)
   //:: UnexpectedOutput(postcondition.violated:insufficient.permission, /Carbon/issue/1/)
   //:: UnexpectedOutput(postcondition.violated:insufficient.permission, /Silicon/issue/1/)
  ensures  acc(loc(a, 1).val)
{}