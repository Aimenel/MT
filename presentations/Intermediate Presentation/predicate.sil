field f:Int

predicate p(r:Ref) 
{
	acc(r.f) 
}

method m(xs:Seq[Ref], r:Ref) 
requires r in xs
requires forall x:Ref :: x in xs ==> acc(p(x))
ensures forall x:Ref :: x in xs ==> acc(p(x))
ensures unfolding p(r) in r.f == 4

{
	unfold p(r)
	r.f := 4
	fold p(r)
}